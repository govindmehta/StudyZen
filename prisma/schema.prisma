generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id @default(cuid())
  userId     String     @unique  // Clerk User ID
  username   String     @unique
  flashcards FlashCard[]
  responses  StudyResponse[]
   quizzes    Quiz[]
}

model FlashCard {
  id          String  @id @default(cuid())
  title       String
  user        User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  cards       Card[]
  lastStudied DateTime @default(now())
  progress    Int
}

model Card {
  id         String    @id @default(cuid())
  flashcard  FlashCard @relation(fields: [flashCardId], references: [id], onDelete: Cascade)
  flashCardId String
  question   String
  answer     String
}

model StudyResponse {
  id         String   @id @default(uuid())
  subtopic   String   @unique
  title      String?
  content    String?
  examples   String?
  analogy    String?
  codeExample String?
  keywords   String[]
  summary    String?
  createdAt  DateTime @default(now())
  user       User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String?
}


model Quiz {
  id           String   @id @default(cuid())
  title        String
  description  String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
  time         Int      
  completed    Boolean  @default(false)
  score        Int?     // Nullable; only set if completed
  progress     Int?     // Percentage progress (0-100)
  thumbnail    String?  // UI styling or image reference
  questions    QuizQuestion[]
  createdAt    DateTime @default(now())
}

model QuizQuestion {
  id            String   @id @default(cuid())
  quiz          Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)
  quizId        String
  question      String
  options       String[] // Multiple choice options
  correctAnswer String
  explanation   String?  // Explanation for the correct answer
  questionType  String   // e.g., "MCQ", "True/False", "Short Answer"
  difficulty    String   // "Easy", "Medium", "Hard"
}